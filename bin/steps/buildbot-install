# Install dependencies with Pip.
puts-step "Installing buildbot dependencies"

if [ ! "$BB_BRANCH" ]; then
    BB_BRANCH = 'master'
fi

if [ ! "$BB_REPO" ]; then
    BB_BRANCH='https//github.com/buildbot/buildbot'
fi

if [ ! "$BB_WWW" ]; then
    BB_WWW='base'
fi

if [ -d "buildbot" ]; then
    git fetch | cleanup | indent
    git checkout "origin/$BB_BRANCH" -B "$BB_BRANCH" | cleanup | indent
else
    git clone -b "$BB_BRANCH" "$BB_REPO" "buildbot"
fi

/app/.heroku/python/bin/pip install mock | cleanup | indent
/app/.heroku/python/bin/pip install -e "buildbot/master" | cleanup | indent
/app/.heroku/python/bin/pip install -e "buildbot/pkg" | cleanup | indent
/app/.heroku/python/bin/pip install -e "buildbot/www/$BB_WWW" | cleanup | indent


/app/.heroku/python/bin/buildbot create-master master

puts-step 'Copying config file'
if [ ! -f "$BUILD_DIR/master.cfg" ]; then
    cp "$ROOT_DIR/vendor/master.cfg.sample" "$BUILD_DIR/master/master.cfg"
else
    cp "$BUILD_DIR/master.cfg" "$BUILD_DIR/master/master.cfg"
fi
if [ ! -f "$BUILD_DIR/Procfile" ]; then
    cp "$ROOT_DIR/vendor/Procfile.sample" "$BUILD_DIR/Procfile"
fi
if [ ! -f "$BUILD_DIR/CHECKS" ]; then
    echo "/" > "$BUILD_DIR/CHECKS"
fi
